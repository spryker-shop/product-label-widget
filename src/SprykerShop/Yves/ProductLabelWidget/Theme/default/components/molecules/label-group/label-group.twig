{% extends model('component') %}

{% define config = {
    name: 'label-group',
} %}

{% define data = {
    labels: [],
    productItemJsName: '',
}  %}

{% block body %}
    {% set leftColumnComponents = [] %}
    {% set rightColumnComponents = [] %}
    {% set labelTagType = 'template:tag' %}

    {% for label in data.labels %}
        {% set componentName = 'flag' %}
        {% set componentModifiers = [label.type] %}
        {% set labelJsClass = data.productItemJsName ? data.productItemJsName ~ '__label-flag' %}
        {% set labelTextJsClass = data.productItemJsName ? data.productItemJsName ~ '__label-flag-text' %}

        {% if label.type == labelTagType %}
            {% set componentName = 'tag' %}
            {% set componentModifiers = [] %}
            {% set labelJsClass = data.productItemJsName ? data.productItemJsName ~ '__label-tag' %}
            {% set labelTextJsClass = data.productItemJsName ? data.productItemJsName ~ '__label-tag-text' %}
        {% endif %}

        {% set component = include(
            [
                molecule(componentName, 'ProductLabelWidget')
            ],
            {
                class: labelJsClass,
                modifiers: componentModifiers,
                data: {
                    text: label.text,
                    textClass: labelTextJsClass,
                },
                attributes: {
                    'data-label-tag-type': label.type == labelTagType ? labelTagType,
                },
            },
            with_context = false
        ) %}

        {% if label.type == labelTagType %}
            {% set leftColumnComponents = leftColumnComponents | merge([component]) %}
        {% else %}
            {% set rightColumnComponents = rightColumnComponents | merge([component]) %}
        {% endif %}
    {% endfor %}

    <div class="grid grid--justify">
        {% if leftColumnComponents %}
            <div class="col col--expand">{{ leftColumnComponents | join | raw }}</div>
        {% else %}
            {% set labelJsClass = data.productItemJsName ? data.productItemJsName ~ '__label-tag' %}
            {% set labelTextJsClass = data.productItemJsName ? data.productItemJsName ~ '__label-tag-text' %}

            <div class="col col--expand">
                {% include molecule('tag', 'ProductLabelWidget') with {
                    class: labelJsClass ~ ' is-hidden',
                    data: {
                        textClass: labelTextJsClass,
                    },
                    attributes: {
                        'data-label-tag-type': labelTagType,
                    },
                } only %}
            </div>
        {% endif %}

        {% if rightColumnComponents %}
            <div class="col col--expand text-right">{{ rightColumnComponents | join | raw }}</div>
        {% else %}
            {% set labelJsClass = data.productItemJsName ? data.productItemJsName ~ '__label-flag' %}
            {% set labelTextJsClass = data.productItemJsName ? data.productItemJsName ~ '__label-flag-text' %}

            <div class="col col--expand text-right">
                {% include molecule('flag', 'ProductLabelWidget') with {
                    class: labelJsClass ~ ' is-hidden',
                    data: {
                        textClass: labelTextJsClass,
                    },
                } only %}
            </div>
        {% endif %}
    </div>
{% endblock %}
